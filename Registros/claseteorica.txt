Registros:

    Tipo estructurado que permite almacenar valores de distinto tipo. Cada componente se denomina campo

        type
            Treg = Record
                nombre:string[5];
                edad:byte;
            end;
        


    EJEMPLO -> registro donde se almacenan fechas
                DD MM AAAA
                 byte \ word


        type 
            TregF = record
                mes, dia: byte;
                anio: word;
            end;
        
    EJEMPLO -> registro donde se almacenan datos de una persona

        type 
            St20 = String[20];
            TregP = record
                nombre: St20;
                edad: byte;
                peso, altura : real;
            end;

    DECLARACION DE VARIABLES

        var 
            Per1, Per2: TregP;
            fecha: TregF;

    ACCEDER A LOS CAMPOS DE LAS VARIABLES
        VariableTipoRegistro.Campo

            ej>
                fecha.dia ---> accedo al dia
                fecha.anio ---. accedo al anio
    
    Escribir sobre los campos de las VariableTipoRegistro
        
        Readln(Per1.Nombre);Readln(Per1.Edad);


        o bien Tambien

        with Per1 do
            begin
                Readln(nombre);
                Readln(edad);
            end;

    ---------------------------------

        Per2.peso := 50
        Per2.altura := Per1.altura;

        Tambien sirven como acumuladores 

        Per1 := Per2 ----> Se permite la asignacion entre registros si son del mismo tipo



    NO SE PUEDEN COMPARAR REGISTROS, PERO SI SUS CAMPOS

        if Per1.peso > Per2.peso then....

    

    REGISTROS Y ARREGLOS ANIDADOS 

    Type
        .........
        TregPer = record    
            nombre:St20;
            fechaNac: TregF; {Registro anidado}
        End;
    
    var
        per: TregPer


Esto quedaria:       Nombre
                     dia    mes     anio


    Lo mismo podria hacer con vectores y matrices. 

    